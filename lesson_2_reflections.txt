What happens when you initialize a repository? Why do you need to do it?

When we initialize a repository a .git file is created. This new file allows
us to make commits and keep track of the history of the files inside the
directory. We need to do this in order to use a lot of the Git features that
we want to use.




How is the staging area different from the working directory and the
repository? What value do you think it offers?

The staging area is different in the way that it works. It is what is in
between looking at the files and commiting the changes. I think the
value that it offers is a way to see what files you will be commiting
before you actually commit and it gives you flexibility to change your
mind if you decide that another way to commit is better.




How can you use the staging area to make sure you have one commit per logical
change?

We can use git status to see the status of the changes we have made since our
last commit. With this we can then use 'git add _' to add files to the staging
area and almost be ready to commit. We can use this area to compare our working
area with the staging area. Then we can 'git commit' the changes.




What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

A branch would be really helpful when wanting to try things out with new
features without worrying about breaking a version that already may work.
Branches allow us to stay organized with the different 'versions' that we 
may have.